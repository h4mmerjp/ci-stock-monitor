name: CI Medical Stock Monitor

on:
  schedule:
    # 毎日午前9時と午後5時に実行 (UTC)
    # 日本時間では毎日午後6時と午前2時
    - cron:  '0 0,8 * * *'
  workflow_dispatch:

jobs:
  monitor_stock:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # 複数商品チェックのため時間を延長

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 selenium

    - name: Run stock monitor script
      id: run_script
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
        CI_MEDICAL_USERNAME: ${{ secrets.CI_MEDICAL_USERNAME }}
        CI_MEDICAL_PASSWORD: ${{ secrets.CI_MEDICAL_PASSWORD }}
        LOGIN_URL: https://www.ci-medical.com/accounts/sign_in
      run: |
        python stock_monitor.py
        if [ -f last_stock_status.txt ]; then
          echo "status=$(cat last_stock_status.txt)" >> $GITHUB_OUTPUT
        else
          echo "status=エラー" >> $GITHUB_OUTPUT
        fi

    - name: Create Issue on Stock Available
      if: success() && steps.run_script.outputs.status == '在庫あり'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'CI Medical 在庫通知: 在庫あり',
            body: 'CI Medicalで在庫がある商品が見つかりました。\nメールで詳細を確認してください。'
          })

    - name: Create Issue on Error
      if: failure() || steps.run_script.outputs.status == 'エラー'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'CI Medical 在庫監視エラー',
            body: 'CI Medicalの在庫監視でエラーが発生しました。\nログを確認してください。'
          })
